<!doctype html>
<html>
  <head>
    <meta charset="utf-8">
    <meta http-equiv="x-ua-compatible" content="ie=edge">
    <title><% opts.title %></title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link href="https://fonts.googleapis.com/css?family=Open+Sans:300,400,400i,700" rel="stylesheet">
    <link href="./style.css" rel="stylesheet">
    <% opts.css.forEach(function (href) {
      %><link href="<%= href %>" rel="stylesheet"><%
    }); %>
    <script>examples=<%- JSON.stringify(opts.examples) %>;</script>
  </head>
  <body>
    <header class="sg-masthead">
      <div class="sg-masthead__logo">
        <svg preserveAspectRatio="xMinYMin meet" viewBox="0 0 83 22" xmlns="http://www.w3.org/2000/svg"><title>asset/aetnaLogo-purple</title><g fill="#FFFFFF" fill-rule="evenodd"><path d="M74 18.46c-.082-1.16-.05-2.83-.04-4.26-.194-.022-.467-.015-.69-.015-2.43 0-3.395.84-3.395 2.32 0 1.534.758 2.145 2.538 2.145.54 0 1.163-.073 1.586-.19m5.382 3.15c-3.206 0-5.692.368-8.215.368-4.778 0-6.457-2.045-6.457-5.523 0-3.375 2.696-5.195 8.53-5.195.227 0 .638.005.8.01l.004-.357c0-2.39-.71-3.383-3.054-3.383-1.665 0-3.413.616-4.584 1.26l-.198-3.815c1.345-.564 3.55-.95 6.054-.95 5.117 0 7.038 1.733 7.038 6.514 0 2.558-.16 4.752-.16 6.296 0 1.375.01 3.38.242 4.775m-54.77-10.094c2.248 0 3.324-.777 3.324-2.444 0-1.185-.78-1.837-1.99-1.837-2.128 0-2.867 1.755-2.867 4.15v.087c.42.035.99.044 1.532.044M9.288 18.46c-.08-1.16-.05-2.83-.038-4.26-.194-.022-.468-.015-.692-.015-2.43 0-3.395.84-3.395 2.32 0 1.534.76 2.145 2.54 2.145.54 0 1.163-.073 1.585-.19m15.952-4.04c-.6 0-1.62-.016-2.134-.043v.118c0 2.442 1.555 3.992 4.435 3.992 1.736 0 3.322-.554 4.458-1.237l.2 3.818c-1.145.552-3.334.93-5.496.93-5.852 0-8.666-2.065-9.153-7.66-.667-.032-1.677-.068-3.047-.08-.037.983-.072 1.852-.072 2.578 0 1.375.01 3.38.242 4.775-3.206 0-5.69.368-8.215.368C1.68 21.978 0 19.933 0 16.455c0-3.375 2.696-5.195 8.53-5.195.227 0 .638.005.8.01l.004-.357c0-2.39-.712-3.383-3.055-3.383-1.665 0-3.414.616-4.585 1.26l-.198-3.815c1.345-.564 3.552-.95 6.055-.95 5.116 0 7.038 1.733 7.038 6.514 0 .263-.002.52-.005.777 1.25.006 2.16.028 2.998.082.517-4.72 2.808-7.354 8.533-7.354 4.73 0 6.9 2.052 6.9 5.136 0 3.577-2.637 5.24-7.776 5.24m37.33-.76c0-1.444.027-3.364.027-3.364 0-4.32-1.84-6.26-7.034-6.26-2.916 0-4.995.527-8.252.527.183 3.033.19 6.78.176 9.097.014 2.36-.076 6.587-.175 7.95h5.584c-.128-1.368-.24-5.3-.226-7.95 0-1.51.02-3.337.077-5.79.555-.197 1.263-.342 2.028-.342 1.955 0 2.584.945 2.584 3.542 0 0 .03 1.628.03 2.59 0 2.36-.076 6.587-.177 7.95h5.585c-.13-1.368-.24-5.3-.226-7.95m-17.553 4.124l.227 3.796c-.435.13-1.753.396-3.543.396-3.675 0-5.633-1.595-5.633-5.49 0-3.05.057-6.4.085-8.232h-1.905c.033-.83-.013-2.01 0-2.88 2.86-.49 3.762-2.148 4.18-5.376h3.145c-.11 1.33-.208 3.26-.21 4.565h3.34v3.692H41.31V14.9c0 2.574.504 3.276 2.222 3.276.533 0 1.165-.17 1.485-.39M81.58 5.235c.237 0 .356-.105.356-.316 0-.095-.032-.167-.094-.215-.062-.05-.164-.073-.305-.073-.05 0-.093 0-.128.002-.037.002-.07.005-.1.01h.007v.59h.262zm-.524-.83c.077-.008.16-.015.25-.02.09-.003.163-.005.22-.005.242 0 .417.05.524.15.106.103.16.23.16.384 0 .075-.012.142-.034.204-.022.06-.05.114-.087.158-.037.044-.08.08-.127.11-.05.03-.098.052-.148.063h.01l.426.73c-.024.015-.05.025-.076.03-.026.006-.05.01-.072.01-.042 0-.08-.01-.12-.03-.036-.017-.07-.05-.096-.1l-.353-.602h-.216v.71h-.26V4.405zm.033 2.07c.14.07.3.103.48.103s.34-.034.48-.104c.14-.07.257-.163.352-.278.096-.116.17-.25.218-.403.05-.152.075-.31.075-.477 0-.165-.025-.323-.075-.474-.05-.152-.122-.285-.218-.4-.095-.116-.212-.208-.352-.276-.14-.07-.3-.103-.48-.103s-.338.034-.477.103c-.138.068-.255.16-.35.276-.096.115-.17.248-.218.4-.05.15-.075.31-.075.474 0 .257.054.488.164.69.11.205.267.362.475.47zm-.54-.098c-.117-.137-.206-.296-.268-.48-.062-.18-.093-.375-.093-.58 0-.206.03-.4.094-.58.064-.18.155-.34.274-.475.12-.135.263-.243.434-.323.17-.08.363-.12.578-.12.216 0 .41.04.58.12.17.08.313.187.43.322.118.135.21.294.273.475.063.18.095.374.095.58 0 .205-.032.4-.095.58-.064.184-.155.343-.274.48-.12.137-.265.246-.435.325-.17.08-.363.12-.58.12-.215 0-.408-.04-.58-.12-.17-.08-.316-.188-.436-.325z"/></g></svg>
      </div>
      <!--<nav class="sg-masthead__nav">
        <% opts.nav.forEach(function(link) { %>
            <a href="<%= link.url %>" target="_blank"><%= link.name %></a>
        <% }); %>
      </nav>-->
    </header>
    <div class="container">
      <div class="grid-sm">
        <div class="grid__col-sm-3">
          <nav class="sg-menu">
            <% menu(list, 1) %>
          </nav>
        </div>
        <div class="grid__col-sm-8 grid__col-sm-offset-1">
          <% sections(list, 1) %>
        </div>
      </div>
    </div>
    <div class="container">
      <footer class="footer">
        <small>Last modified <%- lastModified() %></small>
      </footer>
    </div>
    <script src="scripts.js"></script>
    <% opts.js.forEach(function (src) {
      %><script src="<%= src %>"></script><%
    }); %>
  </body>
</html>

<% function menu(children, depth) { %>
    <% if (depth < 3) children.sort(sort).forEach(function (child) {
      if (child.name) {
        if (depth < 2) { %>
          <span class="sg-menu__title"><%= child.title %></span>
        <% }
        if (depth > 1) { %>
          <a class="sg-menu__item" href="#<%- child.name %>">
            <span><%= child.title %></span>
          </a>
        <% }
    %>
    <% if (child.children) menu(child.children, depth + 1) %>
        <%
      }
    }); %>
  <%
}

function sections(children, depth) {
  depth = Math.max(Math.min(depth, 6), 1);

  children.sort(sort).forEach(function (child) {
    %>
    <section class="sg-section"<% if (child.name) { %> id="<%= child.name %>"<% } %>>
      <% if (depth > 1) { %>
        <% if (child.title) { %>
          <%- '<h' + (depth - 1) + ' class="page-title">' %>
            <%= child.title %>
          <%- '</h' + (depth - 1) + '>' %>
        <% } %>
      <% } %>

      <div class="markdown-body">
        <%- child.content %>
        <% if (child.children) sections(child.children, depth + 1) %>
      </div>
    </section>
    <%
  });
}

function lastModified() {
  var now = new Date();

  var day = 'Sunday Monday Tuesday Wednesday Thursday Friday Saturday'.split(' ')[now.getDay()];

  var month = 'January February March April May June July August September October November December'.split(' ')[now.getMonth()];

  return day + ', ' + now.getDate() + ' ' + month + ' ' + now.getFullYear() + ' ' + now.getHours() + ':' + ('0' + now.getMinutes()).slice(-2);
}

function sort(childA, childB) {
  return (childA.order || 0) - (childB.order || 0);
}

%>
